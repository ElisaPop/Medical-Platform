stages:
  - build
  - test
  - checkstyle
  - deploy

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  stage: test
  image: maven:3.6.3-jdk-11
  script:
    - echo "Test DEMO app"
    - mvn test && mvn jacoco:report
    - cat target/site/jacoco/index.html | grep -o '.*'
  coverage: "/Total.*?([0-9]{1,3})%/"


checkstyle:
  stage: checkstyle
  image: maven:3.3.9-jdk-8
  script:
    - echo "Checkstyle DEMO app"
    - mvn checkstyle:check

variables:
  DB_IP: ec2-52-48-65-240.eu-west-1.compute.amazonaws.com
  DB_PORT: 5432
  DB_USER: ncnakohnzyhdtx
  DB_PASSWORD: 0a0a7b8fa7031e6832ebc5e29c9a65899b2718217d42065e2f117b70ad8ae887
  DB_DBNAME: d6s7q5ju2lllhe
  APP_NAME: lifeline-medapp-backend

deploy:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - docker_production
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $HEROKU_REGISTRY_IMAGE:latest
    - docker login --username=_ --password=$HEROKU_API_KEY $HEROKU_REGISTRY
    - docker push $HEROKU_REGISTRY_IMAGE:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_NAME